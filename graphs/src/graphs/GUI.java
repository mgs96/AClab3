/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphs;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.PointerInfo;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author mauri
 */
public class GUI extends javax.swing.JFrame {
    
    public Thread thread;
    public Graph graph;
    
    /**
     * Creates new form GUI
     */
    public GUI(int w, int h) {
        initComponents();
        graph = new Graph();
        this.canvas1.setSize(w, h);
        
        thread = new Thread(new Runnable(){

            @Override
            public void run() {
                while(true){
                    draw();
                    try{
                        Thread.sleep(15);
                    }
                    catch(InterruptedException ex){
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } 
        });
    }
    
    private void draw() {
        this.canvas1.createBufferStrategy(2);
        Graphics g = this.canvas1.getBufferStrategy().getDrawGraphics();
        drawBackground(g);
        drawNodes(g);
        drawEdges(g);
        this.canvas1.getBufferStrategy().show();
    }
    
    public void drawBackground(Graphics g){
        g.setColor(Color.WHITE);
        g.fillRect(0,0,canvas1.getWidth(), canvas1.getHeight());
    }
    
    public void drawNodes(Graphics g){
        this.graph.drawNode(g);
    }
    
    public void drawEdges(Graphics g){
        this.graph.drawEdge(g);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas1 = new java.awt.Canvas();
        BTNdo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 768));

        canvas1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canvas1MouseClicked(evt);
            }
        });

        BTNdo.setText("Do");
        BTNdo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNdoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 393, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BTNdo)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                .addComponent(BTNdo)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTNdoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNdoActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser("src");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Graph file", "graph");
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(GUI.this);
        if(returnVal == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile();
        }
        
    }//GEN-LAST:event_BTNdoActionPerformed

    private void canvas1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvas1MouseClicked
        // TODO add your handling code here:
        PointerInfo a = MouseInfo.getPointerInfo();
        Point b = a.getLocation();
        int x = (int) b.getX() - this.canvas1.getLocationOnScreen().x;
        int y = (int) b.getY() - this.canvas1.getLocationOnScreen().y;
        this.graph.createNode(x,y);
    }//GEN-LAST:event_canvas1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNdo;
    private java.awt.Canvas canvas1;
    // End of variables declaration//GEN-END:variables
}
